{"ast":null,"code":"var _jsxFileName = \"D:\\\\finno_test\\\\frontend\\\\src\\\\pages\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pagination = _ref => {\n  _s();\n\n  let {\n    Page_AllPost,\n    TotalPost,\n    Current_Page,\n    paginate,\n    PostCount\n  } = _ref;\n  const pageNum = [];\n  const [Page_Limit, setPage_Limit] = useState(5);\n  const [minPage_Limit, setminPage_Limit] = useState(0);\n  const [maxPage_Limit, setmaxPage_Limit] = useState(5);\n\n  function prevClick() {\n    if (Current_Page > 1) {\n      paginate(Current_Page - 1);\n    }\n\n    if ((Current_Page - 1) % Page_Limit == 0 && Current_Page > 1) {\n      paginate(Current_Page - 1);\n      setmaxPage_Limit(maxPage_Limit - Page_Limit);\n      setminPage_Limit(minPage_Limit - Page_Limit);\n    }\n  }\n\n  function nextClick() {\n    if (Current_Page < PostCount) {\n      paginate(Current_Page + 1);\n    }\n\n    if (Current_Page + 1 > maxPage_Limit && Current_Page < PostCount) {\n      paginate(Current_Page + 1);\n      setmaxPage_Limit(maxPage_Limit + Page_Limit);\n      setminPage_Limit(minPage_Limit + Page_Limit);\n    }\n  }\n\n  let DecreTab = null;\n\n  if (Current_Page > 1) {\n    DecreTab = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-1\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"pagination__numbers\",\n        id: \"prev\",\n        onClick: () => {\n          prevClick();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  let IncreTab = null;\n\n  if (Current_Page < PostCount) {\n    IncreTab = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-1\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"pagination__numbers\",\n        id: \"next\",\n        onClick: () => {\n          nextClick();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  for (let i = 1; i <= Math.ceil(TotalPost / Page_AllPost); i++) {\n    pageNum.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [DecreTab, pageNum.map(number => {\n        if (number < maxPage_Limit + 1 && number > minPage_Limit) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-1\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"pagination__numbers\",\n              id: number,\n              className: Current_Page === number ? \"active\" : \"\",\n              onClick: () => paginate(number),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), IncreTab]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"bM5Ipbwl7iC7DjVYO1IZ+0e/0S4=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/finno_test/frontend/src/pages/Pagination.js"],"names":["React","useState","Pagination","Page_AllPost","TotalPost","Current_Page","paginate","PostCount","pageNum","Page_Limit","setPage_Limit","minPage_Limit","setminPage_Limit","maxPage_Limit","setmaxPage_Limit","prevClick","nextClick","DecreTab","IncreTab","i","Math","ceil","push","map","number"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState } from \"react\";\n\nexport const Pagination = ({\n  Page_AllPost,\n  TotalPost,\n  Current_Page,\n  paginate,\n  PostCount\n}) => {\n  const pageNum = [];\n  const [Page_Limit, setPage_Limit] = useState(5);\n  const [minPage_Limit, setminPage_Limit] = useState(0);\n  const [maxPage_Limit, setmaxPage_Limit] = useState(5);\n\n  function prevClick() {\n    if (Current_Page > 1) {\n      paginate(Current_Page - 1);\n    }\n    if ((Current_Page - 1) % Page_Limit == 0 && Current_Page > 1) {\n      paginate(Current_Page - 1);\n      setmaxPage_Limit(maxPage_Limit - Page_Limit);\n      setminPage_Limit(minPage_Limit - Page_Limit);\n    }\n  }\n\n  function nextClick() {\n    if (Current_Page < PostCount) {\n      paginate(Current_Page + 1);\n    }\n    if (Current_Page + 1 > maxPage_Limit && Current_Page < PostCount) {\n      paginate(Current_Page + 1);\n      setmaxPage_Limit(maxPage_Limit + Page_Limit);\n      setminPage_Limit(minPage_Limit + Page_Limit);\n    }\n  }\n\n  let DecreTab = null;\n  if (Current_Page > 1) {\n    DecreTab = (\n      <div className=\"col-sm-1\">\n        <li\n          class=\"pagination__numbers\"\n          id=\"prev\"\n          onClick={() => {\n            prevClick();\n          }}\n        >\n          <a>«</a>\n        </li>\n      </div>\n    );\n  }\n\n  let IncreTab = null;\n  if (Current_Page < PostCount) {\n    IncreTab = (\n      <div className=\"col-sm-1\">\n        <li\n          class=\"pagination__numbers\"\n          id=\"next\"\n          onClick={() => {\n            nextClick();\n          }}\n        >\n          <a>»</a>\n        </li>\n      </div>\n    );\n  }\n\n  for (let i = 1; i <= Math.ceil(TotalPost / Page_AllPost); i++) {\n    pageNum.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {DecreTab}\n        {pageNum.map((number) => {\n          if (number < maxPage_Limit + 1 && number > minPage_Limit) {\n            return (\n              <div className=\"col-sm-1\">\n                <li\n                  class=\"pagination__numbers\"\n                  key={number}\n                  id={number}\n                  className={Current_Page === number ? \"active\" : \"\"}\n                  onClick={() => paginate(number)}\n                >\n                  <a>{number}</a>\n                </li>\n              </div>\n            );\n          } else {\n            return null;\n          }\n        })}\n        {IncreTab}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}